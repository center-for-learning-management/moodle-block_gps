define(["jquery","core/ajax","core/notification","core/str","core/url","core/modal_factory","block_gps/modal_reachedlocation","block_gps/leaflet"],function(h,d,e,f,c,b,g){return{courseid:0,debug:true,posaccuracy:5,honeypots:[],honeypotmodal:undefined,honeypotshown:[],lasttrackedposition:{altitude:0,latitude:0,longitude:0},locateinterval:null,locateintervalrunning:false,foundcms:{},deg2rad:function(i){return i*(Math.PI/180)},distance:function(k,i,j){if(typeof(j)==="undefined"){j=0}var o=this.deg2rad(k.latitude);var m=this.deg2rad(k.longitude);var n=this.deg2rad(i.latitude);var l=this.deg2rad(i.longitude);latDelta=n-o;lonDelta=l-m;angle=2*Math.asin(Math.sqrt(Math.pow(Math.sin(latDelta/2),2)+Math.cos(o)*Math.cos(n)*Math.pow(Math.sin(lonDelta/2),2)));return Math.round(angle*6378.388*1000,j)},getHoneypots:function(j){var i=this;if(typeof(j)!=="undefined"){i.courseid=j}d.call([{methodname:"block_gps_gethoneypots",args:{courseid:i.courseid},done:function(k){var l=(i.honeypots.length==0);var m=[];i.honeypots=JSON.parse(k);if(i.debug){console.log("Got honeypots",i.honeypots)}i.honeypots.forEach(function(n){if(n.uservisible){i.foundcms[n.cmid]=true;if(!l){m.push(n)}}});i.modalCheck(m)},fail:e.exception,}])},interval:function(j){var i=this;if(this.debug){console.log("block_gps/geoassist::interval(ms)",j)}if(j>0){h("#block_gps_interval_toggler").find("i.fa").removeClass("fa-toggle-off").addClass("fa-toggle-on");clearInterval(this.locateinterval);this.locateinterval=setInterval(function(){i.locate()},j);this.locateintervalrunning=true;navigator.geolocation.getCurrentPosition(function(){})}else{if(typeof(this.locateinterval)!=="undefined"){h("#block_gps_interval_toggler").find("i.fa").removeClass("fa-toggle-on").addClass("fa-toggle-off");clearInterval(this.locateinterval);this.locateinterval=null;this.locateintervalrunning=false}}d.call([{methodname:"block_gps_setinterval",args:{ms:j},done:function(k){},fail:e.exception,}])},intervalToggle:function(){if(this.debug){console.log("block_gps/geoassist::intervalToggle()")}if(this.locateintervalrunning){this.interval(0)}else{this.interval(5000)}},locateInit:function(i,k,j){if(this.debug){console.log("block_gps/geoassist::locateInit(altitude, latitude, longitude)",i,k,j)}if(typeof(i)!=="undefined"){this.lasttrackedposition.altitude=i}if(typeof(k)!=="undefined"){this.lasttrackedposition.latitude=k}if(typeof(j)!=="undefined"){this.lasttrackedposition.longitude=j}},locate:function(j){if(typeof(j)==="undefined"){j=false}if(this.debug){console.log("block_gps/geoassist::locate(once)",j)}var i=this;if(navigator.geolocation){if(i.debug){console.log("navigator.geolocation exists")}navigator.geolocation.getCurrentPosition(function(k){var k={altitude:Math.round(k.coords.altitude),latitude:i.round(k.coords.latitude,i.posaccuracy),longitude:i.round(k.coords.longitude,i.posaccuracy)};if(typeof(k.latitude)!=="undefined"&&k.latitude!=null){h(".block_gps_current_latitude").html(k.latitude.toFixed(i.posaccuracy))}if(typeof(k.longitude)!=="undefined"&&k.longitude!=null){h(".block_gps_current_longitude").html(k.longitude.toFixed(i.posaccuracy))}if(typeof(k.altitude)!=="undefined"&&k.altitude!=null){h(".block_gps_current_altitude").html(k.altitude)}if(i.debug){console.log("retrieved position",k)}h(".availability_gps_condition_button").each(function(){var p=this;var q=h(p).find(".latitude").html();var r=h(p).find(".longitude").html();var o={latitude:q,longitude:r};var s=i.distance(k,o);if(i.debug){console.log("Update UI Position of ",o," with distance ",s," in span ",p)}f.get_strings([{key:"meters",component:"block_gps"},{key:"kilometers",component:"block_gps"},]).done(function(t){h(p).find(".distanceerror").addClass("hidden");h(p).find(".distanceok").removeClass("hidden");if(s>1000){h(p).find(".distance").html(Math.round(s/1000,1));h(p).find(".distancelabel").html(t[1])}else{h(p).find(".distance").html(s);h(p).find(".distancelabel").html(t[0])}}).fail(e.exception)});var m=[];i.honeypots.forEach(function(o){var q=i.distance(k,o);if(i.debug){console.log("Our distance to honeypot ",o," is ",q)}if(o.accessible&&q<o.accuracy){if(i.debug){console.log("JEHAAA, you reached",o)}var p=false;i.honeypotshown.forEach(function(r){if(r==o.url){p=true}});if(!p){m.push(o);i.honeypotshown.push(o.url)}else{if(i.debug){console.log("Our last modal was for this honeypot - suppress!")}}}});if(j||m.length>0){if(i.debug){console.log("Let us tell Moodle about our new position!")}var l={lat:k.latitude,lon:k.longitude,alt:k.altitude};d.call([{methodname:"block_gps_locate",args:l,done:function(o){if(i.debug){console.log("moodle informed about position",l," replied with",o)}i.getHoneypots()},fail:e.exception,}])}var n=i.distance(i.lasttrackedposition,k);if(i.debug){console.log("distance since last tracked position",n)}if(j&&n<5&&m.length==0){f.get_strings([{key:"location_not_changed:title",component:"block_gps"},{key:"location_not_changed:body",component:"block_gps"},]).done(function(o){b.create({type:b.types.OK,title:o[0],body:o[1],}).then(function(p){p.show();setTimeout(function(){p.hide()},2000)})}).fail(e.exception)}i.lasttrackedposition=k})}else{alert("geolocation_not_supported")}},modalCheck:function(j){var i=this;if(i.debug){console.log("block_gps/geoassist:modalCheck(honeypots)",j)}if(typeof(i.honeypotmodal)==="undefined"){b.create({type:g.TYPE,}).then(function(k){i.honeypotmodal=k;i.modalFill(j)})}else{i.modalFill(j)}},modalFill:function(l){var j=this;if(l.length==0){return}j.honeypotmodal.show();var i=j.honeypotmodal.getRoot();h(i).find(".block_gps_reload").attr("href",c.relativeUrl("/course/view.php",{id:j.courseid}));h(i).find(".found-multiple,.found-single").addClass("hidden");if(l.length==1){h(i).find(".found-single").removeClass("hidden")}else{h(i).find(".found-multiple").removeClass("hidden")}var k=h(i).find("ul.found-list").empty();l.forEach(function(m){k.append(h("<li>").append(h("<a>").attr("href",m.url).attr("target","_blank").html(m.name)))})},pushHoneypot:function(i){if(this.debug){console.log("block_gps/geoassist::pushHoneypot(location)",i)}i.accessible=(typeof(i.visible)!=="undefined"&&i.visible==1);this.honeypots.push(i)},round:function(j,k){var i=1;for(a=0;a<k;a++){i=i*10}return Math.round(j*i)/i},}});